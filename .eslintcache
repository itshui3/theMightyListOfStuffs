[{"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\index.js":"1","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\App.js":"2","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\reportWebVitals.js":"3","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\index.js":"4","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\Board.js":"5","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Task.js":"6","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInput.js":"7","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TaskInput.js":"8","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInputTimeout.js":"9","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Todo.js":"10","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\Dashboard.js":"11","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardInput.js":"12","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardCard.js":"13","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\PageInput.js":"14","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\PageCard.js":"15","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\assets\\dummyPages.js":"16","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\assets\\dummyBoards.js":"17"},{"size":500,"mtime":1606347215642,"results":"18","hashOfConfig":"19"},{"size":2235,"mtime":1609462306281,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1606347215642,"results":"21","hashOfConfig":"19"},{"size":117,"mtime":1609197978583,"results":"22","hashOfConfig":"19"},{"size":5152,"mtime":1609394994501,"results":"23","hashOfConfig":"19"},{"size":3206,"mtime":1609229253481,"results":"24","hashOfConfig":"19"},{"size":2044,"mtime":1608942079431,"results":"25","hashOfConfig":"19"},{"size":1242,"mtime":1609230517696,"results":"26","hashOfConfig":"19"},{"size":1199,"mtime":1609229098625,"results":"27","hashOfConfig":"19"},{"size":735,"mtime":1609157273028,"results":"28","hashOfConfig":"19"},{"size":1616,"mtime":1609476127260,"results":"29","hashOfConfig":"19"},{"size":1825,"mtime":1609301833802,"results":"30","hashOfConfig":"19"},{"size":339,"mtime":1609477287050,"results":"31","hashOfConfig":"19"},{"size":1765,"mtime":1609303261860,"results":"32","hashOfConfig":"19"},{"size":2992,"mtime":1609478195223,"results":"33","hashOfConfig":"19"},{"size":828,"mtime":1609475558288,"results":"34","hashOfConfig":"19"},{"size":1220,"mtime":1609475412752,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"v227lg",{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\index.js",[],["75","76"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\App.js",["77","78","79","80"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\reportWebVitals.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\index.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\Board.js",["81","82"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport './Board.css'\r\n\r\nimport Task from './components/Task.js'\r\nimport TaskInput from './components/TaskInput.js'\r\n\r\nfunction Board({ board, deselectBoard }) {\r\n\r\n    const [boardTitle, setBoardTitle] = useState(() => {\r\n        return board && board.title ? board.title : 'placeholder'\r\n    })\r\n    const [taskList, setTaskList] = useState(() => {\r\n        return board && board.tasks && board.tasks.length > 0 ? board.tasks : []\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log('selected board in Board.js', board)\r\n    }, [])\r\n\r\n    // new task input handling\r\n    const [task, setTask] = useState('')\r\n    const [addingTask, setAddingTask] = useState(false)\r\n\r\n    const [dragTaskID, setDragTaskID] = useState(-1)\r\n    \r\n    const taskInputRef = useRef()\r\n\r\n    const toggleAddingTask = () => {\r\n        setAddingTask(addingTask => !addingTask)\r\n        setTask('')\r\n    }\r\n\r\n    const writeTask = (ev) => {\r\n        setTask(ev.target.value)\r\n    }\r\n\r\n    const addTask = (task) => {\r\n\r\n        const newTask = {\r\n            name: task,\r\n            todos: []\r\n        }\r\n        setTaskList((taskList) => {\r\n            return [\r\n                ...taskList,\r\n                newTask\r\n            ]\r\n        })\r\n    }\r\n\r\n    const removeTask = (taskID) => {\r\n        setTaskList(taskList => {\r\n            return taskList.filter((t, idx) => {\r\n                return idx !== taskID\r\n            })\r\n        })\r\n    }\r\n// todo handling\r\n    const addTodo = (taskID) => (todo) => {\r\n        if (!todo.length) { return }\r\n        // find task, then append a todo to it\r\n        setTaskList(taskList.map((task, idx) => {\r\n\r\n            if (idx === taskID) {\r\n                return {\r\n                    ...task,\r\n                    todos: [\r\n                        ...task.todos,\r\n                        todo\r\n                    ]\r\n                }\r\n            } else {\r\n                return task\r\n            }\r\n\r\n        }))\r\n    }\r\n\r\n    const removeTodo = (taskID) => (todoID) => {\r\n        // find task\r\n        setTaskList(taskList.map((task, idx) => {\r\n\r\n            if (idx === taskID) {\r\n                // construct a new array with everything that doesn't meet the condition of having the id of the one I want removed\r\n                const newTodos = task.todos.filter((todo, idx) => idx !== todoID)\r\n\r\n                return {\r\n                    ...task,\r\n                    todos: [\r\n                        ...newTodos\r\n                    ]\r\n                }\r\n            } else {\r\n                return task\r\n            }\r\n        }))\r\n    }\r\n\r\n    const evaluateDragTask = (dropTaskID) => {\r\n        if (dropTaskID === dragTaskID) { return }\r\n\r\n        setTaskList(taskList => {\r\n            let cloneList = JSON.parse(JSON.stringify(taskList))\r\n\r\n            let carry = cloneList[dragTaskID]\r\n            cloneList[dragTaskID] = null\r\n\r\n            let start, end;\r\n\r\n            if (dragTaskID < dropTaskID) {\r\n                start = dragTaskID;\r\n                end = dropTaskID;\r\n\r\n                for (let i = start; i < end; i++) {\r\n                    let temp = cloneList[i]\r\n                    cloneList[i] = cloneList[i+1]\r\n                    cloneList[i+1] = temp\r\n                }\r\n\r\n            } else if (dropTaskID < dragTaskID) {\r\n\r\n                start = dropTaskID;\r\n                end = dragTaskID;\r\n\r\n                for (let i = end; i > start; i--) {\r\n                    let temp = cloneList[i]\r\n                    cloneList[i] = cloneList[i-1]\r\n                    cloneList[i-1] = temp\r\n                }\r\n            }\r\n            cloneList[dropTaskID] = carry\r\n\r\n            return cloneList\r\n        })\r\n    }\r\n\r\nreturn (\r\n<>\r\n\r\n<div className='board_wrapper'>\r\n\r\n    <div className='board_header'>\r\n        <h1 className='board_title header_items'>\r\n        {\r\n        boardTitle \r\n            ? boardTitle \r\n            : 'Placeholder'\r\n        }\r\n        </h1>\r\n\r\n        <div\r\n        onClick={deselectBoard}\r\n        >Deselect Board</div>\r\n\r\n    </div>\r\n\r\n    <div className='board_body'>\r\n    {\r\n    taskList.length > 0\r\n        ?\r\n        taskList.map((task, taskID) => (\r\n\r\n            <Task \r\n            key={taskID}\r\n\r\n            task = {task}\r\n            taskID = {taskID}\r\n            addTask = {addTask}\r\n            addTodo = {addTodo(taskID)}\r\n            removeTask = {removeTask}\r\n            removeTodo = {removeTodo(taskID)}\r\n\r\n            setTaskList={setTaskList}\r\n\r\n            dragTaskID={dragTaskID}\r\n            setDragTaskID={setDragTaskID}\r\n            evaluateDragTask={evaluateDragTask}\r\n            />\r\n\r\n        ))\r\n        :\r\n        null\r\n    }\r\n\r\n    {\r\n        addingTask\r\n        ?\r\n        <TaskInput \r\n        task={task}\r\n        writeTask={writeTask}\r\n        toggleAddingTask={toggleAddingTask}\r\n        taskInputRef={taskInputRef}\r\n        addTask={addTask}\r\n        />\r\n        :\r\n        <div \r\n        className='addingTaskBtn'\r\n        onClick={toggleAddingTask}\r\n        >Add Task</div>\r\n    }\r\n\r\n    </div>\r\n        \r\n</div>\r\n\r\n</>\r\n)\r\n}\r\n\r\nexport default Board;","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Task.js",["83"],"import React, {useEffect, useState, useRef} from 'react'\r\n\r\nimport './Task.css'\r\n\r\nimport TodoInput from './TodoInputTimeout.js'\r\nimport Todo from './Todo.js'\r\n\r\n\r\nfunction Task({ task, taskID, removeTask, addTodo, removeTodo, setTaskList, setDragTaskID, dragTaskID, evaluateDragTask }) {\r\n\r\n    const [addingTodo, setAddingTodo] = useState(false)\r\n    const [todo, setTodo] = useState('')\r\n    const [todoDragID, setTodoDragID] = useState(-1)\r\n\r\n    const todoInputRef = useRef()\r\n\r\n    const toggleAddingTodo = () => {\r\n        setAddingTodo(!addingTodo)\r\n        setTodo('')\r\n    }\r\n\r\n    const writeTodo = (ev) => {\r\n        setTodo(ev.target.value)\r\n    }\r\n\r\n    const evaluateDragTodo = (taskID) => (dropID) => {\r\n\r\n        if (todoDragID === dropID) { return }\r\n\r\n        setTaskList(taskList => {\r\n            let cloneList = JSON.parse(JSON.stringify(taskList))\r\n            // creates a ref to todoList I'm performing dragEvaluate on \r\n            let todoList = cloneList[taskID].todos\r\n            let carry = todoList[todoDragID]\r\n            todoList[todoDragID] = null\r\n\r\n            let start, end;\r\n\r\n            if (todoDragID < dropID) {\r\n\r\n                start = todoDragID;\r\n                end = dropID;\r\n\r\n                for (let i = start; i < end; i++) {\r\n                    let temp = todoList[i]\r\n                    todoList[i] = todoList[i+1]\r\n                    todoList[i+1] = temp\r\n                }\r\n\r\n            } else if (dropID < todoDragID) {\r\n\r\n                start = dropID;\r\n                end = todoDragID;\r\n\r\n                for (let i = end; i > start; i--) {\r\n                    let temp = todoList[i]\r\n                    todoList[i] = todoList[i-1]\r\n                    todoList[i-1] = temp\r\n                }\r\n\r\n            }\r\n            todoList[dropID] = carry\r\n            return cloneList\r\n        })\r\n        setTodoDragID(-1)\r\n\r\n    }\r\n\r\nreturn (\r\n<>\r\n\r\n<div \r\nclassName='task_card' \r\nkey={taskID} \r\nid={taskID}\r\ndraggable='true'\r\nonDragStart={() => setDragTaskID(taskID)}\r\nonDragOver={(ev) => ev.preventDefault()}\r\nonDrop={() => {\r\n    if (dragTaskID>-1) evaluateDragTask(taskID)\r\n}}\r\n>\r\n    <div className='task_header'>\r\n        <h3 className='task_headerObj'>{ task.name }</h3>\r\n        <div \r\n        className='task_headerObj'\r\n        onClick={() => removeTask(taskID)}\r\n        >x</div>\r\n    </div>\r\n    \r\n    {\r\n        task.todos.length > 0\r\n            ?\r\n            task.todos.map((todo, todoID) => (\r\n            <Todo \r\n            key={todoID}\r\n\r\n            todoID={todoID} \r\n            todo={todo} \r\n            removeTodo={removeTodo} \r\n            todoDragID={todoDragID}\r\n            setTodoDragID={setTodoDragID}\r\n            evaluateDragTodo={evaluateDragTodo(taskID)} />\r\n\r\n            ))\r\n            :\r\n            null\r\n    }\r\n\r\n    {\r\n    addingTodo\r\n    ?\r\n    <TodoInput \r\n    taskID={taskID}\r\n\r\n    todo={todo}\r\n    writeTodo={writeTodo}\r\n    toggleAddingTodo={toggleAddingTodo}\r\n    todoInputRef={todoInputRef}\r\n    addTodo={() => addTodo(todo)}\r\n    />\r\n    :\r\n    <div \r\n    className='addTodoBtn'\r\n    onClick={toggleAddingTodo}\r\n    >Add Todo</div>\r\n    }\r\n    \r\n</div>\r\n\r\n</>\r\n)\r\n}\r\n\r\nexport default Task\r\n","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInput.js",["84","85","86","87"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TaskInput.js",["88","89"],"import React, {useState, useEffect, useRef} from 'react'\r\n\r\nimport './TaskInput.css'\r\n\r\nfunction TaskInput({\r\n    task, \r\n    writeTask, \r\n    toggleAddingTask, \r\n    taskInputRef,\r\n    addTask,\r\n}) {\r\n\r\n    const [lock, setLock] = useState(false)\r\n\r\n    useEffect(() => {\r\n        taskInputRef.current.focus()\r\n    }, [])\r\n\r\n    const handleBlurSet = (ev) => {\r\n        console.log('in handleBlurSet')\r\n        if(!lock) {\r\n            toggleAddingTask()\r\n        }\r\n\r\n    }\r\n\r\n    const lock_relock = () => {\r\n        setLock(true)\r\n        setTimeout(() => {\r\n            setLock(false)\r\n        }, .0001)\r\n    }\r\n\r\n    const handleAddTask = () => {\r\n\r\n        if (task.length) {\r\n            toggleAddingTask()\r\n            addTask(task)\r\n        } else {\r\n            taskInputRef.current.focus()\r\n        }\r\n\r\n    }\r\n\r\nreturn (\r\n<>\r\n\r\n<div\r\nclassName='task_card taskInput_cont'\r\n\r\nonMouseDown={(ev) => ev.preventDefault()}\r\nonClick={lock_relock}\r\nonBlur={handleBlurSet}\r\n>\r\n    <input \r\n    className='addTaskInput'\r\n    value={task}\r\n    onChange={writeTask}\r\n    ref={taskInputRef}\r\n    />\r\n    <div\r\n    className='addTaskBtn'\r\n\r\n    onClick={handleAddTask}\r\n    >+Add Task</div>\r\n</div>\r\n\r\n\r\n</> \r\n)\r\n}\r\n\r\nexport default TaskInput\r\n","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInputTimeout.js",["90","91"],"import React, { useState, useEffect, useRef } from 'react'\r\n\r\nimport './TodoInput.css'\r\n\r\nfunction TodoInput({\r\n    todo,\r\n    writeTodo,\r\n    toggleAddingTodo,\r\n    todoInputRef,\r\n    addTodo,\r\n}) {\r\n\r\n    const [lock, setLock] = useState(false)\r\n\r\n    useEffect(() => {\r\n        todoInputRef.current.focus()\r\n    }, [])\r\n\r\n    const handleBlurSet = (ev) => {\r\n\r\n        if(!lock) {\r\n            toggleAddingTodo()\r\n        }\r\n\r\n    }\r\n\r\n    const lock_relock = () => {\r\n        setLock(true)\r\n        setTimeout(() => {\r\n            setLock(false)\r\n        }, .0001)\r\n    }\r\n\r\n    const handleAddTodo = () => {\r\n\r\n        if (todo.length) {\r\n            toggleAddingTodo()\r\n            addTodo()\r\n        } else {\r\n            todoInputRef.current.focus()\r\n        }\r\n\r\n\r\n    }\r\n\r\nreturn (\r\n<>\r\n\r\n<div \r\nclassName='todoInput_cont' \r\n\r\nonMouseDown={(ev) => ev.preventDefault()}\r\nonClick={lock_relock}\r\nonBlur={handleBlurSet}\r\n>\r\n\r\n    <input\r\n    className='addTodoInput'\r\n    value={todo}\r\n    onChange={writeTodo}\r\n    ref={todoInputRef}\r\n    />\r\n\r\n    <div \r\n    className='addTodoBtn'\r\n\r\n    onClick={handleAddTodo}\r\n    >+Add Item</div>\r\n\r\n</div>\r\n    \r\n</>\r\n)\r\n}\r\n\r\nexport default TodoInput\r\n","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Todo.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\Dashboard.js",["92","93"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardInput.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardCard.js",["94"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\PageInput.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\PageCard.js",["95","96"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\assets\\dummyPages.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\assets\\dummyBoards.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":14,"column":23,"nodeType":"103","messageId":"104","endLine":14,"endColumn":35},{"ruleId":"101","severity":1,"message":"105","line":17,"column":18,"nodeType":"103","messageId":"104","endLine":17,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":30,"column":46,"nodeType":"103","messageId":"108","endLine":30,"endColumn":61},{"ruleId":"101","severity":1,"message":"109","line":46,"column":15,"nodeType":"103","messageId":"104","endLine":46,"endColumn":22},{"ruleId":"101","severity":1,"message":"110","line":9,"column":24,"nodeType":"103","messageId":"104","endLine":9,"endColumn":37},{"ruleId":"111","severity":1,"message":"112","line":18,"column":8,"nodeType":"113","endLine":18,"endColumn":10,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"115","line":1,"column":16,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"115","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"116","line":1,"column":38,"nodeType":"103","messageId":"104","endLine":1,"endColumn":44},{"ruleId":"101","severity":1,"message":"117","line":13,"column":12,"nodeType":"103","messageId":"104","endLine":13,"endColumn":21},{"ruleId":"101","severity":1,"message":"118","line":19,"column":11,"nodeType":"103","messageId":"104","endLine":19,"endColumn":29},{"ruleId":"101","severity":1,"message":"116","line":1,"column":37,"nodeType":"103","messageId":"104","endLine":1,"endColumn":43},{"ruleId":"111","severity":1,"message":"119","line":17,"column":8,"nodeType":"113","endLine":17,"endColumn":10,"suggestions":"120"},{"ruleId":"101","severity":1,"message":"116","line":1,"column":38,"nodeType":"103","messageId":"104","endLine":1,"endColumn":44},{"ruleId":"111","severity":1,"message":"121","line":17,"column":8,"nodeType":"113","endLine":17,"endColumn":10,"suggestions":"122"},{"ruleId":"101","severity":1,"message":"123","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"115","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"101","severity":1,"message":"115","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"124","line":5,"column":8,"nodeType":"103","messageId":"104","endLine":5,"endColumn":18},{"ruleId":"101","severity":1,"message":"125","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":17},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'setBoardList' is assigned a value but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","no-const-assign","'selectThisBoard' is constant.","const","'newPage' is assigned a value but never used.","'setBoardTitle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'board'. Either include it or remove the dependency array.","ArrayExpression",["128"],"'useEffect' is defined but never used.","'useRef' is defined but never used.","'allowBlur' is assigned a value but never used.","'releasePreventBlur' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'taskInputRef'. Either include it or remove the dependency array.",["129"],"React Hook useEffect has a missing dependency: 'todoInputRef'. Either include it or remove the dependency array.",["130"],"'useState' is defined but never used.","'BoardInput' is defined but never used.","'PageInput' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [board]",{"range":"137","text":"138"},"Update the dependencies array to be: [taskInputRef]",{"range":"139","text":"140"},"Update the dependencies array to be: [todoInputRef]",{"range":"141","text":"142"},[591,593],"[board]",[319,321],"[taskInputRef]",[318,320],"[todoInputRef]"]