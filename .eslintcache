[{"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\index.js":"1","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\App.js":"2","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\reportWebVitals.js":"3","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\index.js":"4","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\Board.js":"5","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\assets\\dummyList.js":"6","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Task.js":"7","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInput.js":"8","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TaskInput.js":"9","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInputTimeout.js":"10","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Todo.js":"11","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\Dashboard.js":"12","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardInput.js":"13","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardCard.js":"14"},{"size":500,"mtime":1606347215642,"results":"15","hashOfConfig":"16"},{"size":935,"mtime":1609228017595,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1606347215642,"results":"18","hashOfConfig":"16"},{"size":117,"mtime":1609197978583,"results":"19","hashOfConfig":"16"},{"size":5071,"mtime":1609228175288,"results":"20","hashOfConfig":"16"},{"size":322,"mtime":1609197456008,"results":"21","hashOfConfig":"16"},{"size":3230,"mtime":1609222978180,"results":"22","hashOfConfig":"16"},{"size":2044,"mtime":1608942079431,"results":"23","hashOfConfig":"16"},{"size":1225,"mtime":1609222954726,"results":"24","hashOfConfig":"16"},{"size":1198,"mtime":1609222968291,"results":"25","hashOfConfig":"16"},{"size":735,"mtime":1609157273028,"results":"26","hashOfConfig":"16"},{"size":760,"mtime":1609228178715,"results":"27","hashOfConfig":"16"},{"size":651,"mtime":1609199620184,"results":"28","hashOfConfig":"16"},{"size":304,"mtime":1609199468149,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"v227lg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\index.js",[],["62","63"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\App.js",["64"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\reportWebVitals.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\index.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\Board.js",["65","66"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\assets\\dummyList.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Task.js",["67"],"import React, {useEffect, useState, useRef} from 'react'\r\n\r\nimport './Task.css'\r\n\r\nimport TodoInput from './TodoInputTimeout.js'\r\nimport Todo from './Todo.js'\r\n\r\n\r\nfunction Task({ task, taskID, removeTask, addTodo, removeTodo, setTaskList, setDragTaskID, dragTaskID, evaluateDragTask }) {\r\n\r\n    const [addingTodo, setAddingTodo] = useState(false)\r\n    const [todo, setTodo] = useState('')\r\n    const [todoDragID, setTodoDragID] = useState(-1)\r\n\r\n    const todoInputRef = useRef()\r\n\r\n    const toggleAddingTodo = () => {\r\n        setAddingTodo(!addingTodo)\r\n        setTodo('')\r\n    }\r\n\r\n    const writeTodo = (ev) => {\r\n        setTodo(ev.target.value)\r\n    }\r\n\r\n    const evaluateDragTodo = (taskID) => (dropID) => {\r\n\r\n        if (todoDragID === dropID) { return }\r\n\r\n        setTaskList(taskList => {\r\n            let cloneList = JSON.parse(JSON.stringify(taskList))\r\n            // creates a ref to todoList I'm performing dragEvaluate on \r\n            let todoList = cloneList[taskID].todos\r\n            let carry = todoList[todoDragID]\r\n            todoList[todoDragID] = null\r\n\r\n            let start, end;\r\n\r\n            if (todoDragID < dropID) {\r\n\r\n                start = todoDragID;\r\n                end = dropID;\r\n\r\n                for (let i = start; i < end; i++) {\r\n                    let temp = todoList[i]\r\n                    todoList[i] = todoList[i+1]\r\n                    todoList[i+1] = temp\r\n                }\r\n\r\n            } else if (dropID < todoDragID) {\r\n\r\n                start = dropID;\r\n                end = todoDragID;\r\n\r\n                for (let i = end; i > start; i--) {\r\n                    let temp = todoList[i]\r\n                    todoList[i] = todoList[i-1]\r\n                    todoList[i-1] = temp\r\n                }\r\n\r\n            }\r\n            todoList[dropID] = carry\r\n            return cloneList\r\n        })\r\n        setTodoDragID(-1)\r\n\r\n    }\r\n\r\nreturn (\r\n<>\r\n\r\n<div \r\nclassName='task_card' \r\nkey={taskID} \r\nid={taskID}\r\ndraggable='true'\r\nonDragStart={() => setDragTaskID(taskID)}\r\nonDragOver={(ev) => ev.preventDefault()}\r\nonDrop={() => {\r\n    if (dragTaskID>-1) evaluateDragTask(taskID)\r\n}}\r\n>\r\n    <div className='task_header'>\r\n        <h3 className='task_headerObj'>{ task.name }</h3>\r\n        <div \r\n        className='task_headerObj'\r\n        onClick={() => removeTask(taskID)}\r\n        >x</div>\r\n    </div>\r\n    \r\n    {\r\n        task.todos.length > 0\r\n            ?\r\n            task.todos.map((todo, todoID) => (\r\n            <Todo \r\n            key={todoID}\r\n\r\n            todoID={todoID} \r\n            todo={todo} \r\n            removeTodo={removeTodo} \r\n            todoDragID={todoDragID}\r\n            setTodoDragID={setTodoDragID}\r\n            evaluateDragTodo={evaluateDragTodo(taskID)} />\r\n\r\n            ))\r\n            :\r\n            null\r\n    }\r\n\r\n    {\r\n    addingTodo\r\n    ?\r\n    <TodoInput \r\n    taskID={taskID}\r\n\r\n    todo={todo}\r\n    writeTodo={writeTodo}\r\n    toggleAddingTodo={toggleAddingTodo}\r\n    todoInputRef={todoInputRef}\r\n    addTodo={() => addTodo(todo)}\r\n    />\r\n    :\r\n    <button \r\n    className='todo_card startAddingTodoBtn'\r\n    onClick={toggleAddingTodo}\r\n    >Add Todo</button>\r\n    }\r\n    \r\n</div>\r\n\r\n</>\r\n)\r\n}\r\n\r\nexport default Task\r\n","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInput.js",["68","69","70","71"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TaskInput.js",["72","73"],"import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TaskInput({\r\n    task, \r\n    writeTask, \r\n    toggleAddingTask, \r\n    taskInputRef,\r\n    addTask,\r\n}) {\r\n\r\n    const [lock, setLock] = useState(false)\r\n\r\n    useEffect(() => {\r\n        taskInputRef.current.focus()\r\n    }, [])\r\n\r\n    const handleBlurSet = (ev) => {\r\n        console.log('in handleBlurSet')\r\n        if(!lock) {\r\n            toggleAddingTask()\r\n        }\r\n\r\n    }\r\n\r\n    const lock_relock = () => {\r\n        setLock(true)\r\n        setTimeout(() => {\r\n            setLock(false)\r\n        }, .0001)\r\n    }\r\n\r\n    const handleAddTask = () => {\r\n\r\n        if (task.length) {\r\n            toggleAddingTask()\r\n            addTask(task)\r\n        } else {\r\n            taskInputRef.current.focus()\r\n        }\r\n\r\n    }\r\n\r\nreturn (\r\n<>\r\n\r\n<div\r\nclassName='task_card taskInput_cont'\r\n\r\nonMouseDown={(ev) => ev.preventDefault()}\r\nonClick={lock_relock}\r\nonBlur={handleBlurSet}\r\n>\r\n    <input \r\n    className='taskInput_input'\r\n    value={task}\r\n    onChange={writeTask}\r\n    ref={taskInputRef}\r\n    />\r\n    <button\r\n    className='taskInput_btn'\r\n\r\n    onClick={handleAddTask}\r\n    >Add Task</button>\r\n</div>\r\n\r\n\r\n</> \r\n)\r\n}\r\n\r\nexport default TaskInput\r\n","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInputTimeout.js",["74","75"],"import React, { useState, useEffect, useRef } from 'react'\r\n\r\nimport './TodoInput.css'\r\n\r\nfunction TodoInput({\r\n    todo,\r\n    writeTodo,\r\n    toggleAddingTodo,\r\n    todoInputRef,\r\n    addTodo,\r\n}) {\r\n\r\n    const [lock, setLock] = useState(false)\r\n\r\n    useEffect(() => {\r\n        todoInputRef.current.focus()\r\n    }, [])\r\n\r\n    const handleBlurSet = (ev) => {\r\n\r\n        if(!lock) {\r\n            toggleAddingTodo()\r\n        }\r\n\r\n    }\r\n\r\n    const lock_relock = () => {\r\n        setLock(true)\r\n        setTimeout(() => {\r\n            setLock(false)\r\n        }, .0001)\r\n    }\r\n\r\n    const handleAddTodo = () => {\r\n\r\n        if (todo.length) {\r\n            toggleAddingTodo()\r\n            addTodo()\r\n        } else {\r\n            todoInputRef.current.focus()\r\n        }\r\n\r\n\r\n    }\r\n\r\nreturn (\r\n<>\r\n\r\n<div \r\nclassName='input_cont' \r\n\r\nonMouseDown={(ev) => ev.preventDefault()}\r\nonClick={lock_relock}\r\nonBlur={handleBlurSet}\r\n>\r\n\r\n    <input\r\n    className='todo_card'\r\n    value={todo}\r\n    onChange={writeTodo}\r\n    ref={todoInputRef}\r\n    />\r\n\r\n    <button \r\n    className='addTodo_btn'\r\n\r\n    onClick={handleAddTodo}\r\n    >Add Todo</button>\r\n\r\n</div>\r\n    \r\n</>\r\n)\r\n}\r\n\r\nexport default TodoInput\r\n","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Todo.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\Dashboard.js",["76"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardInput.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardCard.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":7,"column":10,"nodeType":"83","messageId":"84","endLine":7,"endColumn":19},{"ruleId":"81","severity":1,"message":"85","line":1,"column":35,"nodeType":"83","messageId":"84","endLine":1,"endColumn":44},{"ruleId":"81","severity":1,"message":"86","line":9,"column":24,"nodeType":"83","messageId":"84","endLine":9,"endColumn":37},{"ruleId":"81","severity":1,"message":"85","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"85","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"87","line":1,"column":38,"nodeType":"83","messageId":"84","endLine":1,"endColumn":44},{"ruleId":"81","severity":1,"message":"88","line":13,"column":12,"nodeType":"83","messageId":"84","endLine":13,"endColumn":21},{"ruleId":"81","severity":1,"message":"89","line":19,"column":11,"nodeType":"83","messageId":"84","endLine":19,"endColumn":29},{"ruleId":"81","severity":1,"message":"87","line":1,"column":37,"nodeType":"83","messageId":"84","endLine":1,"endColumn":43},{"ruleId":"90","severity":1,"message":"91","line":15,"column":8,"nodeType":"92","endLine":15,"endColumn":10,"suggestions":"93"},{"ruleId":"81","severity":1,"message":"87","line":1,"column":38,"nodeType":"83","messageId":"84","endLine":1,"endColumn":44},{"ruleId":"90","severity":1,"message":"94","line":17,"column":8,"nodeType":"92","endLine":17,"endColumn":10,"suggestions":"95"},{"ruleId":"81","severity":1,"message":"96","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'dummyList' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setBoardTitle' is assigned a value but never used.","'useRef' is defined but never used.","'allowBlur' is assigned a value but never used.","'releasePreventBlur' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'taskInputRef'. Either include it or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has a missing dependency: 'todoInputRef'. Either include it or remove the dependency array.",["100"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [taskInputRef]",{"range":"105","text":"106"},"Update the dependencies array to be: [todoInputRef]",{"range":"107","text":"108"},[291,293],"[taskInputRef]",[318,320],"[todoInputRef]"]