[{"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\index.js":"1","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\App.js":"2","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\reportWebVitals.js":"3","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\index.js":"4","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\Board.js":"5","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\assets\\dummyList.js":"6","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Task.js":"7","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInput.js":"8","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TaskInput.js":"9","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInputTimeout.js":"10","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Todo.js":"11","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\Dashboard.js":"12","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardInput.js":"13","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardCard.js":"14"},{"size":500,"mtime":1606347215642,"results":"15","hashOfConfig":"16"},{"size":935,"mtime":1609228017595,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1606347215642,"results":"18","hashOfConfig":"16"},{"size":117,"mtime":1609197978583,"results":"19","hashOfConfig":"16"},{"size":5071,"mtime":1609228175288,"results":"20","hashOfConfig":"16"},{"size":322,"mtime":1609197456008,"results":"21","hashOfConfig":"16"},{"size":3206,"mtime":1609229253481,"results":"22","hashOfConfig":"16"},{"size":2044,"mtime":1608942079431,"results":"23","hashOfConfig":"16"},{"size":1225,"mtime":1609222954726,"results":"24","hashOfConfig":"16"},{"size":1199,"mtime":1609229098625,"results":"25","hashOfConfig":"16"},{"size":735,"mtime":1609157273028,"results":"26","hashOfConfig":"16"},{"size":788,"mtime":1609228267163,"results":"27","hashOfConfig":"16"},{"size":651,"mtime":1609199620184,"results":"28","hashOfConfig":"16"},{"size":304,"mtime":1609199468149,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"v227lg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\index.js",[],["62","63"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\App.js",["64"],"import React, { useState } from 'react'\nimport './App.css';\n\nimport { Board } from './components'\nimport { Dashboard } from './components'\n\nimport { dummyList } from './components/Board/assets/dummyList.js'\n\nfunction App() {\n\n    const [selectedBoard, setSelectedBoard] = useState(-1)\n\n    const [boardList, setBoardList] = useState([])\n\n    const deselectBoard = () => {\n        setSelectedBoard(-1)\n    }\n\n    const selectBoard = (boardIdx) => {\n        setSelectedBoard(boardIdx)\n    }\n\n    const pushBoard = (board) => {\n        setBoardList(boards => {\n            return [...boards, board]\n        })\n    }\n\nreturn (\n<>\n\n<div className=\"App\">\n    <Dashboard \n    selectBoard={selectBoard}\n    pushBoard={pushBoard}\n    boards={boardList}\n    />\n    {\n    selectedBoard > -1\n    ?\n    <Board \n    board={boardList[selectedBoard]}\n    deselectBoard={deselectBoard}\n    />\n    :\n    null\n    }\n</div>\n\n</>\n);\n}\n\nexport default App;\n","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\reportWebVitals.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\index.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\Board.js",["65","66"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport './Board.css'\r\n\r\nimport Task from './components/Task.js'\r\nimport TaskInput from './components/TaskInput.js'\r\n\r\nfunction Board({ board, deselectBoard }) {\r\n\r\n    const [boardTitle, setBoardTitle] = useState(() => {\r\n        return board && board.title ? board.title : 'placeholder'\r\n    })\r\n    const [taskList, setTaskList] = useState(() => {\r\n        return board && board.tasks && board.tasks.length > 0 ? board.tasks : []\r\n    })\r\n\r\n    // new task input handling\r\n    const [task, setTask] = useState('')\r\n    const [addingTask, setAddingTask] = useState(false)\r\n\r\n    const [dragTaskID, setDragTaskID] = useState(-1)\r\n    \r\n    const taskInputRef = useRef()\r\n\r\n    const toggleAddingTask = () => {\r\n        setAddingTask(addingTask => !addingTask)\r\n        setTask('')\r\n    }\r\n\r\n    const writeTask = (ev) => {\r\n        setTask(ev.target.value)\r\n    }\r\n\r\n    const addTask = (task) => {\r\n\r\n        const newTask = {\r\n            name: task,\r\n            todos: []\r\n        }\r\n        setTaskList((taskList) => {\r\n            return [\r\n                ...taskList,\r\n                newTask\r\n            ]\r\n        })\r\n    }\r\n\r\n    const removeTask = (taskID) => {\r\n        setTaskList(taskList => {\r\n            return taskList.filter((t, idx) => {\r\n                return idx !== taskID\r\n            })\r\n        })\r\n    }\r\n// todo handling\r\n    const addTodo = (taskID) => (todo) => {\r\n        if (!todo.length) { return }\r\n        // find task, then append a todo to it\r\n        setTaskList(taskList.map((task, idx) => {\r\n\r\n            if (idx === taskID) {\r\n                return {\r\n                    ...task,\r\n                    todos: [\r\n                        ...task.todos,\r\n                        todo\r\n                    ]\r\n                }\r\n            } else {\r\n                return task\r\n            }\r\n\r\n        }))\r\n    }\r\n\r\n    const removeTodo = (taskID) => (todoID) => {\r\n        // find task\r\n        setTaskList(taskList.map((task, idx) => {\r\n\r\n            if (idx === taskID) {\r\n                // construct a new array with everything that doesn't meet the condition of having the id of the one I want removed\r\n                const newTodos = task.todos.filter((todo, idx) => idx !== todoID)\r\n\r\n                return {\r\n                    ...task,\r\n                    todos: [\r\n                        ...newTodos\r\n                    ]\r\n                }\r\n            } else {\r\n                return task\r\n            }\r\n        }))\r\n    }\r\n\r\n    const evaluateDragTask = (dropTaskID) => {\r\n        if (dropTaskID === dragTaskID) { return }\r\n\r\n        setTaskList(taskList => {\r\n            let cloneList = JSON.parse(JSON.stringify(taskList))\r\n\r\n            let carry = cloneList[dragTaskID]\r\n            cloneList[dragTaskID] = null\r\n\r\n            let start, end;\r\n\r\n            if (dragTaskID < dropTaskID) {\r\n                start = dragTaskID;\r\n                end = dropTaskID;\r\n\r\n                for (let i = start; i < end; i++) {\r\n                    let temp = cloneList[i]\r\n                    cloneList[i] = cloneList[i+1]\r\n                    cloneList[i+1] = temp\r\n                }\r\n\r\n            } else if (dropTaskID < dragTaskID) {\r\n\r\n                start = dropTaskID;\r\n                end = dragTaskID;\r\n\r\n                for (let i = end; i > start; i--) {\r\n                    let temp = cloneList[i]\r\n                    cloneList[i] = cloneList[i-1]\r\n                    cloneList[i-1] = temp\r\n                }\r\n            }\r\n            cloneList[dropTaskID] = carry\r\n\r\n            return cloneList\r\n        })\r\n    }\r\n\r\nreturn (\r\n<>\r\n\r\n<div className='board_wrapper'>\r\n\r\n    <div className='board_header'>\r\n        <h1 className='board_title header_items'>\r\n        {\r\n        boardTitle \r\n            ? boardTitle \r\n            : 'Placeholder'\r\n        }\r\n        </h1>\r\n\r\n        <div\r\n        onClick={deselectBoard}\r\n        >Go Back</div>\r\n\r\n    </div>\r\n\r\n    <div className='board_body'>\r\n    {\r\n    taskList.length > 0\r\n        ?\r\n        taskList.map((task, taskID) => (\r\n\r\n            <Task \r\n            key={taskID}\r\n\r\n            task = {task}\r\n            taskID = {taskID}\r\n            addTask = {addTask}\r\n            addTodo = {addTodo(taskID)}\r\n            removeTask = {removeTask}\r\n            removeTodo = {removeTodo(taskID)}\r\n\r\n            setTaskList={setTaskList}\r\n\r\n            dragTaskID={dragTaskID}\r\n            setDragTaskID={setDragTaskID}\r\n            evaluateDragTask={evaluateDragTask}\r\n            />\r\n\r\n        ))\r\n        :\r\n        null\r\n    }\r\n\r\n    {\r\n        addingTask\r\n        ?\r\n        <TaskInput \r\n        task={task}\r\n        writeTask={writeTask}\r\n        toggleAddingTask={toggleAddingTask}\r\n        taskInputRef={taskInputRef}\r\n        addTask={addTask}\r\n        />\r\n        :\r\n        <button \r\n        className='task_card startAddingTaskBtn'\r\n        onClick={toggleAddingTask}\r\n        >Add Task</button>\r\n    }\r\n\r\n    </div>\r\n        \r\n</div>\r\n\r\n</>\r\n)\r\n}\r\n\r\nexport default Board;","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\assets\\dummyList.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Task.js",["67"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInput.js",["68","69","70","71"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TaskInput.js",["72","73"],"import React, {useState, useEffect, useRef} from 'react'\r\n\r\nfunction TaskInput({\r\n    task, \r\n    writeTask, \r\n    toggleAddingTask, \r\n    taskInputRef,\r\n    addTask,\r\n}) {\r\n\r\n    const [lock, setLock] = useState(false)\r\n\r\n    useEffect(() => {\r\n        taskInputRef.current.focus()\r\n    }, [])\r\n\r\n    const handleBlurSet = (ev) => {\r\n        console.log('in handleBlurSet')\r\n        if(!lock) {\r\n            toggleAddingTask()\r\n        }\r\n\r\n    }\r\n\r\n    const lock_relock = () => {\r\n        setLock(true)\r\n        setTimeout(() => {\r\n            setLock(false)\r\n        }, .0001)\r\n    }\r\n\r\n    const handleAddTask = () => {\r\n\r\n        if (task.length) {\r\n            toggleAddingTask()\r\n            addTask(task)\r\n        } else {\r\n            taskInputRef.current.focus()\r\n        }\r\n\r\n    }\r\n\r\nreturn (\r\n<>\r\n\r\n<div\r\nclassName='task_card taskInput_cont'\r\n\r\nonMouseDown={(ev) => ev.preventDefault()}\r\nonClick={lock_relock}\r\nonBlur={handleBlurSet}\r\n>\r\n    <input \r\n    className='taskInput_input'\r\n    value={task}\r\n    onChange={writeTask}\r\n    ref={taskInputRef}\r\n    />\r\n    <button\r\n    className='taskInput_btn'\r\n\r\n    onClick={handleAddTask}\r\n    >Add Task</button>\r\n</div>\r\n\r\n\r\n</> \r\n)\r\n}\r\n\r\nexport default TaskInput\r\n","C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\TodoInputTimeout.js",["74","75"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Board\\components\\Todo.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\Dashboard.js",["76"],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardInput.js",[],"C:\\Users\\Hui\\desktop\\myProjs\\the_mighty_list_of_stuffs\\src\\components\\Dashboard\\BoardCard.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":7,"column":10,"nodeType":"83","messageId":"84","endLine":7,"endColumn":19},{"ruleId":"81","severity":1,"message":"85","line":1,"column":35,"nodeType":"83","messageId":"84","endLine":1,"endColumn":44},{"ruleId":"81","severity":1,"message":"86","line":9,"column":24,"nodeType":"83","messageId":"84","endLine":9,"endColumn":37},{"ruleId":"81","severity":1,"message":"85","line":1,"column":16,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},{"ruleId":"81","severity":1,"message":"85","line":1,"column":27,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"87","line":1,"column":38,"nodeType":"83","messageId":"84","endLine":1,"endColumn":44},{"ruleId":"81","severity":1,"message":"88","line":13,"column":12,"nodeType":"83","messageId":"84","endLine":13,"endColumn":21},{"ruleId":"81","severity":1,"message":"89","line":19,"column":11,"nodeType":"83","messageId":"84","endLine":19,"endColumn":29},{"ruleId":"81","severity":1,"message":"87","line":1,"column":37,"nodeType":"83","messageId":"84","endLine":1,"endColumn":43},{"ruleId":"90","severity":1,"message":"91","line":15,"column":8,"nodeType":"92","endLine":15,"endColumn":10,"suggestions":"93"},{"ruleId":"81","severity":1,"message":"87","line":1,"column":38,"nodeType":"83","messageId":"84","endLine":1,"endColumn":44},{"ruleId":"90","severity":1,"message":"94","line":17,"column":8,"nodeType":"92","endLine":17,"endColumn":10,"suggestions":"95"},{"ruleId":"81","severity":1,"message":"96","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":25},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'dummyList' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'setBoardTitle' is assigned a value but never used.","'useRef' is defined but never used.","'allowBlur' is assigned a value but never used.","'releasePreventBlur' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'taskInputRef'. Either include it or remove the dependency array.","ArrayExpression",["99"],"React Hook useEffect has a missing dependency: 'todoInputRef'. Either include it or remove the dependency array.",["100"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [taskInputRef]",{"range":"105","text":"106"},"Update the dependencies array to be: [todoInputRef]",{"range":"107","text":"108"},[291,293],"[taskInputRef]",[318,320],"[todoInputRef]"]